name: test

on:
  push:
    branches:
      - master
      - next
  pull_request:
    branches:
      - master
      - next

permissions:
  contents: read

jobs:
  lint:
    name: Lint - ${{ matrix.os }} - Node v${{ matrix.node-version }}

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: ["lts/*"]

    runs-on: ${{ matrix.os }}

    concurrency:
      group: lint-${{ matrix.os }}-v${{ matrix.node-version }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          architecture: "x64"
          cache: "yarn"
          cache-dependency-path: "yarn.lock"

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Lint
        run: yarn lint

  test:
    name: Test - ${{ matrix.os }} - Node v${{ matrix.node-version }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: ["10", "12", "14", "16", "18", "20"]
        webpack-version: [latest]

    runs-on: ${{ matrix.os }}

    concurrency:
      group: test-${{ matrix.os }}-v${{ matrix.node-version }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Setup Git
        if: matrix.os == 'windows-latest'
        run: git config --global core.autocrlf input

      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: "${{ matrix.node-version }}"
          architecture: "x64"
          cache: "yarn"
          cache-dependency-path: "yarn.lock"

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run tests for webpack version ${{ matrix.webpack-version }}
        run: yarn test --ci

      - name: Submit coverage data to codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
